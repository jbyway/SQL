{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "Azure region that supports Availability Zones"
      },
      "defaultValue": "australiaeast"
    },
    "namePrefix": {
      "type": "string",
      "minLength": 3,
      "maxLength": 8,
      "metadata": {
        "description": "Naming prefix for each new resource created. 3-char min, 8-char max, lowercase alphanumeric"
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "Size of the SQL Server VMs to be created"
      },
      "defaultValue": "Standard_DS3_v2"
    },
    "VMImageResourceID": {
      "type": "string"
    },
    "vmCount": {
      "type": "int",
      "minValue": 2,
      "maxValue": 9,
      "metadata": {
        "description": "Number of SQL Server VMs to be created in AlwaysOn Availability Group cluster (Min=2, Max=9)"
      },
      "defaultValue": 2
    },
    "SQLDataDiskSize": {
      "type": "int",
      "minValue": 64,
      "maxValue": 1023,
      "metadata": {
        "description": "Size of each data disk in GB on each SQL Server VM (Min=128, Max=1023)"
      },
      "defaultValue": 128
    },
    "SQLLogDiskSize": {
      "type": "int",
      "minValue": 64,
      "maxValue": 1023,
      "metadata": {
        "description": "Size of each data disk in GB on each SQL Server VM (Min=128, Max=1023)"
      },
      "defaultValue": 64
    },
    "SQLTempdbDiskCount": {
      "type": "int",
      "minValue": 1,
      "maxValue": 16,
      "metadata": {
        "description": ""
      },
      "defaultValue": 2
    },
    "SQLDataDiskCount": {
      "type": "int",
      "minValue": 1,
      "maxValue": 16,
      "metadata": {
        "description": ""
      },
      "defaultValue": 2
    },
    "SQLLogDiskCount": {
      "type": "int",
      "minValue": 1,
      "maxValue": 16,
      "metadata": {
        "description": ""
      },
      "defaultValue": 2
    },
    "SQLTempdbDiskSize": {
      "type": "int",
      "minValue": 32,
      "maxValue": 1023,
      "metadata": {
        "description": "Size of your TempDB Drive. Default Path Will be E: Drive for new deployments"
      },
      "defaultValue": 32
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "DNS domain name for existing Active Directory domain"
      }
    },
    "ouPath": {
      "type": "string",
      "metadata": {
        "description": "OU Path for server object to be created in domain"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "UPN of the Administrator of the existing Active Directory Domain with Domain Join Ability. Will also be created as local admin. "
      }
    },
    "adminPassword": {
      "type": "securestring",
      "minLength": 12,
      "metadata": {
        "description": "Password for the Administrator account of the existing Active Directory Domain"
      }
    },
    "sqlServiceAccount": {
      "type": "string",
      "metadata": {
        "description": "User account to be used for the SQL Server service account. Do not use the same account specified in adminUsername parameter"
      }
    },
    "sqlServicePassword": {
      "type": "securestring",
      "minLength": 12,
      "metadata": {
        "description": "Password to be used for the SQL Server service account"
      }
    },
    "existingVirtualNetworkRGName": {
      "type": "string",
      "metadata": {
        "description": "Resource Group Name for the existing VNET."
      }
    },
    "existingVirtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing VNET."
      }
    },
    "existingSubnetName": {
      "type": "string",
      "defaultValue": "SQLAOAGSubnet",
      "metadata": {
        "description": "Name of the existing subnet in the existing VNET to which the SQL Server VMs should be deployed"
      }
    },
    "SQLUNCPath": {
      "type": "string",
      "metadata": {
        "description": "UNC Path of existing SQL 2019 extracted Installation Files"
      },
      "defaultValue": "\\\\dc1\\shared\\sql2019ent"
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Location of resources that the script is dependent on such as linked templates and DSC modules"
      },
      "defaultValue": "https://raw.githubusercontent.com/jbyway/SQL/main/301-sql-alwayson-md-ilb-zones/"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    }
  },
  "variables": {
    "subnetId": "[resourceId(parameters('existingVirtualNetworkRGName'),'Microsoft.Network/virtualNetworks/subnets',parameters('existingVirtualNetworkName'), parameters('existingSubnetName'))]",
    "deploySqlClusterTemplateURL": "[uri(parameters('_artifactsLocation'),concat('nestedtemplates/deploy-sql-cluster.json', parameters('_artifactsLocationSasToken')))]",
    "deploySqlCluster": "deploySqlCluster"
  },
  "resources": [
    {
      "name": "[variables('deploySqlCluster')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deploySqlClusterTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "namePrefix": {
            "value": "[parameters('namePrefix')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "ouPath": {
            "value": "[parameters('ouPath')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "sqlServiceAccount": {
            "value": "[parameters('sqlServiceAccount')]"
          },
          "sqlServicePassword": {
            "value": "[parameters('sqlServicePassword')]"
          },
          "subnetId": {
            "value": "[variables('subnetId')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "VMImageResourceID": {
            "value": "[parameters('VMImageResourceID')]"
          },
          "vmCount": {
            "value": "[parameters('vmCount')]"
          },
          "SQLDataDiskSize": {
            "value": "[parameters('SQLDataDiskSize')]"
          },
          "SQLDataDiskCount": {
            "value": "[parameters('SQLDataDiskCount')]"
          },
          "SQLLogDiskSize": {
            "value": "[parameters('SQLLogDiskSize')]"
          },
          "SQLLogDiskCount": {
            "value": "[parameters('SQLLogDiskCount')]"
          },
          "SQLTempDBDiskSize": {
            "value": "[parameters('SQLTempDBDiskSize')]"
          },
          "SQLUNCPath": {
            "value": "[parameters('SQLUNCPath')]"
          },
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "agListenerName": {
      "type": "string",
      "value": "[reference(variables('deploySqlCluster')).outputs.agListenerName.value]"
    }
  }
}
